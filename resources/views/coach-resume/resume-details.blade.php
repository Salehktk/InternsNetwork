<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Resume Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

    <style>
        .start-div {
            border-top: 10px solid blue;
        }

        label {
            font-weight: bold;
            font-family: popin;
        }

        .card {
            background-color: #f1f5f7;
            border: 0;
        }

        .card-body {
            background-color: #e5ebf0;
        }

        .form-control {
            border-radius: 0.5rem;
            border: 1px solid #e4e9ee;
        }

        .form-control:focus {
            box-shadow: none;
            border-color: #007bff;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

        .rounded-circle {
            border-radius: 50%;
        }

        button {
            width: 130px;
        }

        ::placeholder {
            font-size: 15px;
            color: #48494896 !important
                /* Adjust the size as needed */
        }

        /* Specific input field placeholder styling */
        input::placeholder {
            font-size: 15px;
            color: #e4e9ee
                /* Adjust the size as needed */
        }

        textarea::placeholder {
            font-size: 15px;
            color: #e4e9ee
                /* Adjust the size as needed */
        }

        .loader-wrapper {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            display: none;
        }

        .loader-container {
            text-align: center;
        }

        .loader {
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #3498db;
            width: 120px;
            height: 120px;
            animation: spin 2s linear infinite;
            margin: 0 auto;
        }

        .loader-message {
            margin-top: 20px;
            color: #ffffff;
            font-size: 18px;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
            /* Hides the spinner arrows in Firefox */
        }
    </style>

</head>

<body>

    <div class="container mt-5">
        <div class="card border-0 shadow-lg rounded-4">
            <div class="card-body start-div p-4">

                <!-- Profile Picture -->

                <form id="submitForm" class="needs-validation"
                    action="https://script.google.com/macros/s/AKfycbyy5G6lv_CA0ymRd6qRN37tfEAgfHhbjYsHlt9q1_rBGJ36eiUUtbstKv5QXsDX6EiITw/exec"
                    method="post" enctype="multipart/form-data" novalidate>
                    @csrf
                    <!-- AI Photo and Resume URL -->
                    <div class="mb-4">
                        {{-- <div class="form-group mb-3">
                            <input type="hidden" name="PhotoAI"
                                class="form-control form-control-lg shadow-sm border-primary rounded-pill"
                                placeholder="Generated by AI to protect your privacy. Please edit as you see fit but keep it sensible. Upload a different one if you don't like this one." value="" />
                        </div> --}}
                        <div class="form-group">
                            <input type="hidden" name="Resume"
                                class="form-control form-control-lg shadow-sm border-primary rounded-pill"
                                placeholder="Use this to upload new version of resume" value="{{ $resumeUrl }}" />
                        </div>
                    </div>

                    <!-- Personal Information -->
                    <div class="mb-4">
                        <h4 class="text-primary mb-3">Personal Information</h4>
                        <div class="card border-light shadow-sm rounded-3 p-3">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label for="FullName" class="form-label">FullName</label>
                                    <input type="text" name="FullName" id="FullName"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="FullName" required />
                                    <span class="invalid-feedback">Please enter your First Name.</span>

                                </div>
                               
                                <div class="col-md-4 mb-3">
                                    <label for="Location" class="form-label">Location</label>
                                    <input type="text" name="Location" id="Location"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="Country" required />
                                    <span class="invalid-feedback">Please enter your Location.</span>


                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="Bio" class="form-label">Bio</label>
                                <textarea name="Bio" id="Bio" class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                    rows="4"
                                    placeholder="Make yourself sound impressive - candidates want coaches from big-name companies and they want true expertise. Write biography in this style:
[Firstname]. who currently works in [business area] has interned/worked at [Company] [City] in [BizArea], [Company] [City] in [BizArea], [Company] [City] in [BizArea], and [Company] [City] in [BizArea].
[Firstname] knows a lot about [insert some business/career-related things you know a lot about].
[Firstname] is into [briefly mention 3 fun things to show your approachability]."
                                    required></textarea>
                                <span class="invalid-feedback">Please enter your Bio.</span>
                            </div>
                        </div>
                    </div>

                    <!-- Contact Information -->
                    <div class="mb-4">
                        <h4 class="text-primary mb-3">Contact Information</h4>
                        <div class="card border-light shadow-sm rounded-3 p-3">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label for="LinkedInURL" class="form-label">LinkedIn URL</label>
                                    <input type="url" name="LinkedInURL" id="LinkedInURL"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="Your LinkedIn public profile URL" required />
                                    <span class="invalid-feedback">Please enter your LinkedIn URL</span>

                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="Email" class="form-label">Email</label>
                                    <input type="email" name="Email" id="Email"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="Primary Email" required />
                                    <span class="invalid-feedback">Please enter your Primary Email</span>

                                </div>


                                <div class="col-md-4 mb-3">
                                    <label for="Email2" class="form-label">Email2</label>
                                    <input type="email" name="Email2" id="Email2"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="Backup Email" required />
                                    <span class="invalid-feedback">Please enter your Backup Email</span>

                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="WhatsApp" class="form-label">WhatsApp</label>
                                    <input type="number" name="WhatsApp" id="WhatsApp"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="If you are on WhatsApp, please enter number with +country code. Otherwise leave blank if not on WhatsApp."
                                        required />
                                    <span class="invalid-feedback">Please enter your WhatsApp</span>

                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="FaceTime" class="form-label">FaceTime & iMessage</label>
                                    <input type="number" name="FaceTime" id="FaceTime"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="If you have an iPhone please enter number with +country code. If Android, leave blank."
                                        required />
                                    {{-- <span class="invalid-feedback">Please enter your FaceTime</span> --}}
                                    <span class="invalid-feedback">Please enter your FaceTime number with +country code
                                        if you have an iPhone</span>

                                </div>

                            </div>
                            <div class="row">


                            </div>
                        </div>
                    </div>



                    <!-- Alias Information -->
                    <div class="mb-4">

                        <h4 class="text-primary">Alias Information</h4><small class="text-danger">* Information
                            generated from our AI system to protect your identity, you can edit the required information
                            if required</small>
                        <div class="card border-light shadow-sm rounded-3 p-3">
                            <div class="row">
                                <div class="text-center mb-5">
                                    @if (isset($imageUrl))
                                        <img src="{{ $imageUrl }}"
                                            class="img-fluid rounded-circle border border-primary"
                                            alt="Profile Picture"
                                            style="width: 120px; height: 120px; object-fit: cover;" />
                                        <input type="hidden" name="PhotoAI" value="{{ $imageUrl }}" />
                                    @endif

                                </div>
                                <div class="col-md-6 mb-3">
                                    @if (isset($aliasData['NameAlias']))
                                        <label for="NameAlias" class="form-label padded-label">NameAlias</label>
                                        <input type="text" name="NameAlias" id="NameAlias" class="form-control"
                                            placeholder="Generated by AI to protect your privacy. Please edit as you see fit but keep it sensible. "
                                            value="{{ strip_tags($aliasData['NameAlias']) }}" required>
                                        <span class="invalid-feedback">Please enter your NameAlias</span>
                                    @endif
                                </div>

                                <div class="col-md-12 mb-3">
                                    @if (isset($aliasData['biography']))
                                        <label for="BioAlias" class="form-label padded-label">Bio Alias</label>
                                        <textarea name="BioAlias" id="BioAlias" class="form-control" style="height: 200px;"
                                            placeholder="This is your public alias biography that stops you being easily identified. AI generated this version. Please improve it. Keep it as real as possible but protect your privacy. "
                                            value="" required>{{ strip_tags($aliasData['biography']) }}</textarea>
                                        <span class="invalid-feedback">Please enter your Bio Alias</span>
                                    @endif
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Services -->
                    <div class="mb-4">
                        <h4 class="text-primary mb-3">Services</h4>
                        <div class="alert alert-info small fst-italic" role="alert">
                            Check box if you can perform this service. Increase the likelihood of getting selected by typing in the text box why you would be good at this, for example “I received several investment banking offers so I know exactly what it takes to get hired in investment banking” or “I have received 25+ resumes so I know the tricks to make your resume look better”.
                        </div>
                        <div class="card border-light shadow-sm rounded-3 p-3">
                            <div class="row">
                                @foreach ($allservices as $service)
                                    <div class="col-md-4 mb-3">
                                        <div class="form-check">
                                            <input class="form-check-input service-checkbox" type="checkbox"
                                                id="service_{{ $loop->index }}" name="services[]"
                                                value="{{ $service }}">
                                            <label class="form-check-label"
                                                for="service_{{ $loop->index }}">{{ $service }}</label>
                                            <input type="text" name="services_{{ $loop->index }}"
                                                class="form-control credentials-input mt-2"
                                                placeholder="Enter {{ $service }}" style="display:none;">
                                        </div>
                                    </div>
                                @endforeach
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div id="input-fields-container">
                            <!-- Input fields will be dynamically added here -->
                        </div>
                    </div>


                    <!-- Advice and Availability -->
                    <div class="mb-4">
                        {{-- <h4 class="text-primary mb-3">Job Offers</h4> --}}
                        <div class="card border-light shadow-sm rounded-3 p-3">

                            <div class="row">

                                <div class="mb-3">
                                    <label for="JobOffers" class="form-label">Job Offers</label>
                                    <div class="alert alert-info small fst-italic" role="alert">
                                        Insert the companies AND the business area that offered you a job or internship because job offers impress candidates.

                                    </div>
                                    <input type="text" name="JobOffers" id="JobOffers"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3"
                                        placeholder="List companies + business areas that offered you an internship, placement or other employment. We want to impress candidates by your job search success."
                                        required />
                                    <span class="invalid-feedback">Please enter your Job Offers</span>

                                </div>

                                <div class="mb-3">
                                    <label for="Availability" class="form-label">Availability</label>
                                    
                                        <div class="alert alert-info small fst-italic" role="alert">
                                            State your time zone and say something about when is best for you usually. For example: “I’m on Eastern time and around most weekday evenings and some times during weekends.”                                       
                                         </div>                                    
                                  
                                    <textarea name="Availability" id="Availability"
                                        class="form-control form-control-lg shadow-sm border-secondary rounded-3" rows="4"
                                        placeholder="Enter any notes we should send to your candidates about your availability, for example “Contact me immediately at [email] and if no reply within XX hours then WhatsApp me on XX/iMessage me on XX''"
                                        required></textarea>
                                    <span class="invalid-feedback">Please enter your Availability Note</span>

                                </div>

                            </div>
                        </div>
                    </div>

                    <!-- Terms and Conditions -->
                    <div class="form-check mb-4">
                        <input type="checkbox" name="TermsConfirm" id="TermsConfirm" class="form-check-input"
                            required />


                        <label for="TermsConfirm" class="form-check-label">I agree to the <a href="#"
                                class="text-primary">terms and conditions</a></label>
                        <span class="invalid-feedback">Please read and accept our terms and conditions</span>
                    </div>


                    <div class="text-start">
                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-primary btn-md">Save</button>
                    </div>

                </form>
            </div>

        </div>
    </div>

    <div class="loader-wrapper" id="loaderWrapper">
        <div class="loader-container">
            <div class="loader"></div>
            <div class="loader-message">Please wait...</div>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous">
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
        integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
         // Show or hide input fields based on checkbox state
         $('.service-checkbox').on('change', function() {
             var inputField = $(this).closest('.form-check').find('.credentials-input');
             if ($(this).is(':checked')) {
                 inputField.show(); // Show the input field when the checkbox is checked
             } else {
                 inputField.hide(); // Hide the input field when the checkbox is unchecked
                 inputField.val(''); // Clear the input field value when hiding
             }
         });
     });

   

        function createFormData() {
            const form = document.querySelector('#submitForm');
            const modifiedFormData = new FormData(form);

            $('.service-checkbox').each(function() {
                const serviceName = $(this).val(); // Get the service name from the checkbox value
                const inputField = $(this).closest('.form-check').find('.credentials-input');

                if ($(this).is(':checked')) {
                    let inputValue = inputField.val().trim();

                    // If the input field is empty, you can either skip appending or add an empty string
                    modifiedFormData.append(serviceName, inputValue || '');
                }
            });

            return modifiedFormData;
        }

        function doPost(e) {
            var sheet = SpreadsheetApp.openById('your-spreadsheet-id').getSheetByName('Sheet1');

            // Get the headers from the first row of the sheet
            var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

            // Prepare a new row array based on the headers
            var newRow = [];

            // Loop through the headers and find matching data from the form submission
            headers.forEach(function(header) {
                // Look for a parameter that matches the header name
                var value = e.parameter[header] || '';
                newRow.push(value);
            });

            // Append the new row to the sheet
            sheet.appendRow(newRow);

            return ContentService.createTextOutput(JSON.stringify({'result': 'success'}))
                .setMimeType(ContentService.MimeType.JSON);
        }


             // Function to create FormData from input fields

             document.addEventListener('DOMContentLoaded', function() {
                 const form = document.querySelector('#submitForm');
                 const loader = document.querySelector('.loader-wrapper');
                 form.addEventListener('submit', function(event) {
                     event.preventDefault(); // Prevent the default form submission

                     loader.style.display = 'block';
                     if (validateForm(form)) {
                         const formData = createFormData();

                         // console.log(Object.fromEntries(formData.entries()));
                         const formDataObject = Object.fromEntries(formData.entries());

                         const modifiedFormDataObject = {
                             ...formDataObject
                         };

                         if (modifiedFormDataObject.LinkedInURL) {
                             modifiedFormDataObject["LinkedIn URL"] = modifiedFormDataObject.LinkedInURL;
                             delete modifiedFormDataObject.LinkedInURL;
                         }
                         if (modifiedFormDataObject.FaceTime) {
                             modifiedFormDataObject["FaceTime & iMessage"] = modifiedFormDataObject.FaceTime;
                             delete modifiedFormDataObject.FaceTime;
                         }
                         if (modifiedFormDataObject.TermsConfirm) {
                             modifiedFormDataObject["T&Cs Confirmed"] = modifiedFormDataObject.TermsConfirm;
                             delete modifiedFormDataObject.TermsConfirm;
                         }



                         // Merge existing input fields and selected services
                    // Ensure empty fields are set to 'Y'
                 for (let key in modifiedFormDataObject) {
                     if (modifiedFormDataObject.hasOwnProperty(key)) {
                         if (!modifiedFormDataObject[key].trim()) {
                             modifiedFormDataObject[key] = 'Y';
                         }
                     }
                 }

                 // Create a new FormData object from the modified object
                 const modifiedFormData = new FormData();
                 for (let key in modifiedFormDataObject) {
                     if (modifiedFormDataObject.hasOwnProperty(key)) {
                         modifiedFormData.append(key, modifiedFormDataObject[key]);
                     }
                 }

                //  console.log("Form Data: ", Object.fromEntries(formData.entries()));

                         fetch(form.action, {
                                 method: 'POST',
                                 body: modifiedFormData
                             })
                             .then(response => response.json())
                             .then(data => {
                                 if (data.result === 'success') {
                                     form.action = '{{ route('resume.store') }}';
                                     form.removeEventListener('submit', arguments.callee);
                                     form.submit(); // Submit the form
                                 } else {
                                     throw new Error(data.error || 'An unknown error occurred');
                                 }
                             })
                             .catch(error => {
                                 console.error('Error:', error);
                                 alert('An error occurred: ' + error.message);
                                 loader.style.display = 'none'; // Hide loader on error
                             });
                     } else {
                         loader.style.display = 'none'; // Hide loader if form validation fails
                     }
                 });

                 function validateForm(form) {
                     let isValid = true;

                     form.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
                     form.querySelectorAll('.is-valid').forEach(el => el.classList.remove('is-valid'));
                     form.querySelectorAll('.error-message').forEach(el => el.textContent = '');

                     // Validate required fields
                     form.querySelectorAll('input[required], textarea[required]').forEach(input => {
                         if (!input.value.trim()) {
                             input.classList.add('is-invalid');
                             isValid = false;
                             showError(input, 'This field is required');
                         } else {
                             input.classList.add('is-valid');
                         }
                     });

                     // Validate FaceTime field only if it is not empty
                     const faceTimeInput = form.querySelector('input[name="FaceTime"]');
                     if (faceTimeInput && faceTimeInput.value.trim() && !faceTimeInput.checkValidity()) {
                         faceTimeInput.classList.add('is-invalid');
                         isValid = false;
                         showError(faceTimeInput, 'Please enter a valid number with +country code');
                     } else if (faceTimeInput && faceTimeInput.value.trim()) {
                         faceTimeInput.classList.add('is-valid');
                     }


                     // Validate checkbox field
                     const termsCheckbox = form.querySelector('input[name="TermsConfirm"]');
                     if (!termsCheckbox.checked) {
                         termsCheckbox.classList.add('is-invalid');
                         isValid = false;
                         showError(termsCheckbox, 'Please agree to the terms and conditions');
                     } else {
                         termsCheckbox.classList.add('is-valid');
                     }

                     // Additional validation checks
                     form.querySelectorAll('input[type="email"]').forEach(input => {
                         if (input.value && !input.checkValidity()) {
                             input.classList.add('is-invalid');
                             isValid = false;
                             showError(input, 'Please enter a valid email address');
                         } else if (input.value) {
                             input.classList.add('is-valid');
                         }
                     });

                     // Validate URL field
                     const urlInput = form.querySelector('input[type="url"]');
                     if (urlInput && !urlInput.checkValidity()) {
                         urlInput.classList.add('is-invalid');
                         isValid = false;
                         showError(urlInput, 'Please enter a valid URL');
                     } else if (urlInput) {
                         urlInput.classList.add('is-valid');
                     }

                     return isValid;
                 }

                 function showError(input, message) {
                     const errorElement = input.parentElement.querySelector('.invalid-feedback');
                     if (errorElement) {
                         errorElement.textContent = message;
                     }
                 }

                 // Add event listeners to provide immediate feedback
                 form.querySelectorAll('input, textarea').forEach(input => {
                     input.addEventListener('input', () => validateInput(input));
                     input.addEventListener('change', () => validateInput(input));
                 });

                 function validateInput(input) {
                     if (input.required && !input.value.trim()) {
                         input.classList.add('is-invalid');
                         input.classList.remove('is-valid');
                         showError(input, 'This field is required');
                     } else if (input.type === 'email' && !input.checkValidity()) {
                         input.classList.add('is-invalid');
                         input.classList.remove('is-valid');
                         showError(input, 'Please enter a valid email address');
                     } else if (input.type === 'checkbox' && !input.checked) {
                         input.classList.add('is-invalid');
                         input.classList.remove('is-valid');
                         showError(input, 'Please agree to the terms and conditions');
                     } else {
                         input.classList.remove('is-invalid');
                         input.classList.add('is-valid');
                         showError(input, '');
                     }
                 }
             });
    </script>


</body>

</html>
